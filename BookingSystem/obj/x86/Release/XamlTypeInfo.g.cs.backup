//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace BookingSystem
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::BookingSystem.BookingSystem_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace BookingSystem.BookingSystem_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[35];
            _typeNameTable[0] = "BookingSystem.ViewModel.AccommodationVM";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "System.Collections.Generic.Dictionary`2<Boolean, String>";
            _typeNameTable[3] = "String";
            _typeNameTable[4] = "Boolean";
            _typeNameTable[5] = "BookingSystem.Model.Search";
            _typeNameTable[6] = "BookingSystem.Model.Accommodation";
            _typeNameTable[7] = "BookingSystem.ViewModel.RelayCommand";
            _typeNameTable[8] = "System.Collections.ObjectModel.ObservableCollection`1<BookingSystem.Model.Accommodation>";
            _typeNameTable[9] = "System.Collections.ObjectModel.Collection`1<BookingSystem.Model.Accommodation>";
            _typeNameTable[10] = "Int32";
            _typeNameTable[11] = "System.DateTime";
            _typeNameTable[12] = "System.ValueType";
            _typeNameTable[13] = "System.Decimal";
            _typeNameTable[14] = "BookingSystem.Model.Service";
            _typeNameTable[15] = "BookingSystem.Model.Services";
            _typeNameTable[16] = "System.Collections.ObjectModel.ObservableCollection`1<BookingSystem.Model.Service>";
            _typeNameTable[17] = "System.Collections.ObjectModel.Collection`1<BookingSystem.Model.Service>";
            _typeNameTable[18] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[19] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[20] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[21] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[22] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[23] = "Microsoft.Xaml.Interactivity.Trigger";
            _typeNameTable[24] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[25] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[26] = "Microsoft.Xaml.Interactions.Core.NavigateToPageAction";
            _typeNameTable[27] = "BookingSystem.View.Admin";
            _typeNameTable[28] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[29] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[30] = "BookingSystem.Converter.BoleanServicesConverter";
            _typeNameTable[31] = "BookingSystem.View.Book";
            _typeNameTable[32] = "BookingSystem.Converter.CalendarToDateTimeConverter";
            _typeNameTable[33] = "BookingSystem.MainPage";
            _typeNameTable[34] = "BookingSystem.View.Rent";

            _typeTable = new global::System.Type[35];
            _typeTable[0] = typeof(global::BookingSystem.ViewModel.AccommodationVM);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::System.Collections.Generic.Dictionary<global::System.Boolean, global::System.String>);
            _typeTable[3] = typeof(global::System.String);
            _typeTable[4] = typeof(global::System.Boolean);
            _typeTable[5] = typeof(global::BookingSystem.Model.Search);
            _typeTable[6] = typeof(global::BookingSystem.Model.Accommodation);
            _typeTable[7] = typeof(global::BookingSystem.ViewModel.RelayCommand);
            _typeTable[8] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::BookingSystem.Model.Accommodation>);
            _typeTable[9] = typeof(global::System.Collections.ObjectModel.Collection<global::BookingSystem.Model.Accommodation>);
            _typeTable[10] = typeof(global::System.Int32);
            _typeTable[11] = typeof(global::System.DateTime);
            _typeTable[12] = typeof(global::System.ValueType);
            _typeTable[13] = typeof(global::System.Decimal);
            _typeTable[14] = typeof(global::BookingSystem.Model.Service);
            _typeTable[15] = typeof(global::BookingSystem.Model.Services);
            _typeTable[16] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::BookingSystem.Model.Service>);
            _typeTable[17] = typeof(global::System.Collections.ObjectModel.Collection<global::BookingSystem.Model.Service>);
            _typeTable[18] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[19] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[22] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[23] = typeof(global::Microsoft.Xaml.Interactivity.Trigger);
            _typeTable[24] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[25] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[26] = typeof(global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction);
            _typeTable[27] = typeof(global::BookingSystem.View.Admin);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[30] = typeof(global::BookingSystem.Converter.BoleanServicesConverter);
            _typeTable[31] = typeof(global::BookingSystem.View.Book);
            _typeTable[32] = typeof(global::BookingSystem.Converter.CalendarToDateTimeConverter);
            _typeTable[33] = typeof(global::BookingSystem.MainPage);
            _typeTable[34] = typeof(global::BookingSystem.View.Rent);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_AccommodationVM() { return new global::BookingSystem.ViewModel.AccommodationVM(); }
        private object Activate_2_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.Boolean, global::System.String>(); }
        private object Activate_5_Search() { return new global::BookingSystem.Model.Search(); }
        private object Activate_6_Accommodation() { return new global::BookingSystem.Model.Accommodation(); }
        private object Activate_8_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::BookingSystem.Model.Accommodation>(); }
        private object Activate_9_Collection() { return new global::System.Collections.ObjectModel.Collection<global::BookingSystem.Model.Accommodation>(); }
        private object Activate_14_Service() { return new global::BookingSystem.Model.Service(); }
        private object Activate_16_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::BookingSystem.Model.Service>(); }
        private object Activate_17_Collection() { return new global::System.Collections.ObjectModel.Collection<global::BookingSystem.Model.Service>(); }
        private object Activate_19_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_22_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_25_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_26_NavigateToPageAction() { return new global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction(); }
        private object Activate_27_Admin() { return new global::BookingSystem.View.Admin(); }
        private object Activate_30_BoleanServicesConverter() { return new global::BookingSystem.Converter.BoleanServicesConverter(); }
        private object Activate_31_Book() { return new global::BookingSystem.View.Book(); }
        private object Activate_32_CalendarToDateTimeConverter() { return new global::BookingSystem.Converter.CalendarToDateTimeConverter(); }
        private object Activate_33_MainPage() { return new global::BookingSystem.MainPage(); }
        private object Activate_34_Rent() { return new global::BookingSystem.View.Rent(); }
        private void MapAdd_2_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Boolean, global::System.String>)instance;
            var newKey = (global::System.Boolean)key;
            var newItem = (global::System.String)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_8_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::BookingSystem.Model.Accommodation>)instance;
            var newItem = (global::BookingSystem.Model.Accommodation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_9_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::BookingSystem.Model.Accommodation>)instance;
            var newItem = (global::BookingSystem.Model.Accommodation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_15_Services(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::BookingSystem.Model.Service>)instance;
            var newItem = (global::BookingSystem.Model.Service)item;
            collection.Add(newItem);
        }
        private void VectorAdd_16_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::BookingSystem.Model.Service>)instance;
            var newItem = (global::BookingSystem.Model.Service)item;
            collection.Add(newItem);
        }
        private void VectorAdd_17_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::BookingSystem.Model.Service>)instance;
            var newItem = (global::BookingSystem.Model.Service)item;
            collection.Add(newItem);
        }
        private void VectorAdd_19_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_25_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  BookingSystem.ViewModel.AccommodationVM
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_AccommodationVM;
                userType.AddMemberName("Services");
                userType.AddMemberName("SearchAccommodation");
                userType.AddMemberName("SelectedAccommodation");
                userType.AddMemberName("SearchCommand");
                userType.AddMemberName("SearchedAccommodations");
                userType.AddMemberName("ListOfAccommodations");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  System.Collections.Generic.Dictionary`2<Boolean, String>
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_2_Dictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 3:   //  String
                xamlType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Boolean
                xamlType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  BookingSystem.Model.Search
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  BookingSystem.Model.Accommodation
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_Accommodation;
                userType.AddMemberName("Location");
                userType.AddMemberName("NumberOfGuests");
                userType.AddMemberName("IsBooked");
                userType.AddMemberName("Title");
                userType.AddMemberName("CheckInDate");
                userType.AddMemberName("CheckOutDate");
                userType.AddMemberName("Price");
                userType.AddMemberName("Picture");
                userType.AddMemberName("Service");
                userType.AddMemberName("Services");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  BookingSystem.ViewModel.RelayCommand
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  System.Collections.ObjectModel.ObservableCollection`1<BookingSystem.Model.Accommodation>
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<BookingSystem.Model.Accommodation>"));
                userType.CollectionAdd = VectorAdd_8_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  System.Collections.ObjectModel.Collection`1<BookingSystem.Model.Accommodation>
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_Collection;
                userType.CollectionAdd = VectorAdd_9_Collection;
                xamlType = userType;
                break;

            case 10:   //  Int32
                xamlType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  System.DateTime
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 12:   //  System.ValueType
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 13:   //  System.Decimal
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  BookingSystem.Model.Service
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_14_Service;
                userType.AddMemberName("IsAvailable");
                userType.AddMemberName("ServiceName");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  BookingSystem.Model.Services
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<BookingSystem.Model.Service>"));
                userType.CollectionAdd = VectorAdd_15_Services;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  System.Collections.ObjectModel.ObservableCollection`1<BookingSystem.Model.Service>
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<BookingSystem.Model.Service>"));
                userType.Activator = Activate_16_ObservableCollection;
                userType.CollectionAdd = VectorAdd_16_ObservableCollection;
                xamlType = userType;
                break;

            case 17:   //  System.Collections.ObjectModel.Collection`1<BookingSystem.Model.Service>
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_Collection;
                userType.CollectionAdd = VectorAdd_17_Collection;
                xamlType = userType;
                break;

            case 18:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 19:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_19_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger"));
                userType.Activator = Activate_22_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                xamlType = userType;
                break;

            case 23:   //  Microsoft.Xaml.Interactivity.Trigger
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("Actions");
                xamlType = userType;
                break;

            case 24:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 25:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_25_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 26:   //  Microsoft.Xaml.Interactions.Core.NavigateToPageAction
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_26_NavigateToPageAction;
                userType.AddMemberName("TargetPage");
                userType.AddMemberName("Parameter");
                xamlType = userType;
                break;

            case 27:   //  BookingSystem.View.Admin
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_Admin;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  BookingSystem.Converter.BoleanServicesConverter
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_30_BoleanServicesConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  BookingSystem.View.Book
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_Book;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  BookingSystem.Converter.CalendarToDateTimeConverter
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_32_CalendarToDateTimeConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  BookingSystem.MainPage
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  BookingSystem.View.Rent
                userType = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_Rent;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_AccommodationVM_Services(object instance)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            return that.Services;
        }
        private void set_0_AccommodationVM_Services(object instance, object Value)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            that.Services = (global::System.Collections.Generic.Dictionary<global::System.Boolean, global::System.String>)Value;
        }
        private object get_1_AccommodationVM_SearchAccommodation(object instance)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            return that.SearchAccommodation;
        }
        private void set_1_AccommodationVM_SearchAccommodation(object instance, object Value)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            that.SearchAccommodation = (global::BookingSystem.Model.Search)Value;
        }
        private object get_2_AccommodationVM_SelectedAccommodation(object instance)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            return that.SelectedAccommodation;
        }
        private void set_2_AccommodationVM_SelectedAccommodation(object instance, object Value)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            that.SelectedAccommodation = (global::BookingSystem.Model.Accommodation)Value;
        }
        private object get_3_AccommodationVM_SearchCommand(object instance)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            return that.SearchCommand;
        }
        private void set_3_AccommodationVM_SearchCommand(object instance, object Value)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            that.SearchCommand = (global::BookingSystem.ViewModel.RelayCommand)Value;
        }
        private object get_4_AccommodationVM_SearchedAccommodations(object instance)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            return that.SearchedAccommodations;
        }
        private void set_4_AccommodationVM_SearchedAccommodations(object instance, object Value)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            that.SearchedAccommodations = (global::System.Collections.ObjectModel.ObservableCollection<global::BookingSystem.Model.Accommodation>)Value;
        }
        private object get_5_Accommodation_Location(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.Location;
        }
        private void set_5_Accommodation_Location(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.Location = (global::System.String)Value;
        }
        private object get_6_Accommodation_NumberOfGuests(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.NumberOfGuests;
        }
        private void set_6_Accommodation_NumberOfGuests(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.NumberOfGuests = (global::System.Int32)Value;
        }
        private object get_7_Accommodation_IsBooked(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.IsBooked;
        }
        private void set_7_Accommodation_IsBooked(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.IsBooked = (global::System.Boolean)Value;
        }
        private object get_8_Accommodation_Title(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.Title;
        }
        private void set_8_Accommodation_Title(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_9_Accommodation_CheckInDate(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.CheckInDate;
        }
        private void set_9_Accommodation_CheckInDate(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.CheckInDate = (global::System.DateTime)Value;
        }
        private object get_10_Accommodation_CheckOutDate(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.CheckOutDate;
        }
        private void set_10_Accommodation_CheckOutDate(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.CheckOutDate = (global::System.DateTime)Value;
        }
        private object get_11_Accommodation_Price(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.Price;
        }
        private void set_11_Accommodation_Price(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.Price = (global::System.Decimal)Value;
        }
        private object get_12_Accommodation_Picture(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.Picture;
        }
        private void set_12_Accommodation_Picture(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.Picture = (global::System.String)Value;
        }
        private object get_13_Accommodation_Service(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.Service;
        }
        private void set_13_Accommodation_Service(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.Service = (global::BookingSystem.Model.Service)Value;
        }
        private object get_14_Accommodation_Services(object instance)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            return that.Services;
        }
        private void set_14_Accommodation_Services(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Accommodation)instance;
            that.Services = (global::BookingSystem.Model.Services)Value;
        }
        private object get_15_Service_IsAvailable(object instance)
        {
            var that = (global::BookingSystem.Model.Service)instance;
            return that.IsAvailable;
        }
        private void set_15_Service_IsAvailable(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Service)instance;
            that.IsAvailable = (global::System.Boolean)Value;
        }
        private object get_16_Service_ServiceName(object instance)
        {
            var that = (global::BookingSystem.Model.Service)instance;
            return that.ServiceName;
        }
        private void set_16_Service_ServiceName(object instance, object Value)
        {
            var that = (global::BookingSystem.Model.Service)instance;
            that.ServiceName = (global::System.String)Value;
        }
        private object get_17_AccommodationVM_ListOfAccommodations(object instance)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            return that.ListOfAccommodations;
        }
        private void set_17_AccommodationVM_ListOfAccommodations(object instance, object Value)
        {
            var that = (global::BookingSystem.ViewModel.AccommodationVM)instance;
            that.ListOfAccommodations = (global::System.Collections.ObjectModel.ObservableCollection<global::BookingSystem.Model.Accommodation>)Value;
        }
        private object get_18_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_18_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_19_Trigger_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Trigger)instance;
            return that.Actions;
        }
        private object get_20_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_20_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_21_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_21_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_22_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_23_NavigateToPageAction_TargetPage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            return that.TargetPage;
        }
        private void set_23_NavigateToPageAction_TargetPage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            that.TargetPage = (global::System.String)Value;
        }
        private object get_24_NavigateToPageAction_Parameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            return that.Parameter;
        }
        private void set_24_NavigateToPageAction_Parameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            that.Parameter = (global::System.Object)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember xamlMember = null;
            global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "BookingSystem.ViewModel.AccommodationVM.Services":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.ViewModel.AccommodationVM");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Services", "System.Collections.Generic.Dictionary`2<Boolean, String>");
                xamlMember.Getter = get_0_AccommodationVM_Services;
                xamlMember.Setter = set_0_AccommodationVM_Services;
                break;
            case "BookingSystem.ViewModel.AccommodationVM.SearchAccommodation":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.ViewModel.AccommodationVM");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "SearchAccommodation", "BookingSystem.Model.Search");
                xamlMember.Getter = get_1_AccommodationVM_SearchAccommodation;
                xamlMember.Setter = set_1_AccommodationVM_SearchAccommodation;
                break;
            case "BookingSystem.ViewModel.AccommodationVM.SelectedAccommodation":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.ViewModel.AccommodationVM");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "SelectedAccommodation", "BookingSystem.Model.Accommodation");
                xamlMember.Getter = get_2_AccommodationVM_SelectedAccommodation;
                xamlMember.Setter = set_2_AccommodationVM_SelectedAccommodation;
                break;
            case "BookingSystem.ViewModel.AccommodationVM.SearchCommand":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.ViewModel.AccommodationVM");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "SearchCommand", "BookingSystem.ViewModel.RelayCommand");
                xamlMember.Getter = get_3_AccommodationVM_SearchCommand;
                xamlMember.Setter = set_3_AccommodationVM_SearchCommand;
                break;
            case "BookingSystem.ViewModel.AccommodationVM.SearchedAccommodations":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.ViewModel.AccommodationVM");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "SearchedAccommodations", "System.Collections.ObjectModel.ObservableCollection`1<BookingSystem.Model.Accommodation>");
                xamlMember.Getter = get_4_AccommodationVM_SearchedAccommodations;
                xamlMember.Setter = set_4_AccommodationVM_SearchedAccommodations;
                break;
            case "BookingSystem.Model.Accommodation.Location":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Location", "String");
                xamlMember.Getter = get_5_Accommodation_Location;
                xamlMember.Setter = set_5_Accommodation_Location;
                break;
            case "BookingSystem.Model.Accommodation.NumberOfGuests":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "NumberOfGuests", "Int32");
                xamlMember.Getter = get_6_Accommodation_NumberOfGuests;
                xamlMember.Setter = set_6_Accommodation_NumberOfGuests;
                break;
            case "BookingSystem.Model.Accommodation.IsBooked":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "IsBooked", "Boolean");
                xamlMember.Getter = get_7_Accommodation_IsBooked;
                xamlMember.Setter = set_7_Accommodation_IsBooked;
                break;
            case "BookingSystem.Model.Accommodation.Title":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_8_Accommodation_Title;
                xamlMember.Setter = set_8_Accommodation_Title;
                break;
            case "BookingSystem.Model.Accommodation.CheckInDate":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "CheckInDate", "System.DateTime");
                xamlMember.Getter = get_9_Accommodation_CheckInDate;
                xamlMember.Setter = set_9_Accommodation_CheckInDate;
                break;
            case "BookingSystem.Model.Accommodation.CheckOutDate":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "CheckOutDate", "System.DateTime");
                xamlMember.Getter = get_10_Accommodation_CheckOutDate;
                xamlMember.Setter = set_10_Accommodation_CheckOutDate;
                break;
            case "BookingSystem.Model.Accommodation.Price":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Price", "System.Decimal");
                xamlMember.Getter = get_11_Accommodation_Price;
                xamlMember.Setter = set_11_Accommodation_Price;
                break;
            case "BookingSystem.Model.Accommodation.Picture":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Picture", "String");
                xamlMember.Getter = get_12_Accommodation_Picture;
                xamlMember.Setter = set_12_Accommodation_Picture;
                break;
            case "BookingSystem.Model.Accommodation.Service":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Service", "BookingSystem.Model.Service");
                xamlMember.Getter = get_13_Accommodation_Service;
                xamlMember.Setter = set_13_Accommodation_Service;
                break;
            case "BookingSystem.Model.Accommodation.Services":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Accommodation");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Services", "BookingSystem.Model.Services");
                xamlMember.Getter = get_14_Accommodation_Services;
                xamlMember.Setter = set_14_Accommodation_Services;
                break;
            case "BookingSystem.Model.Service.IsAvailable":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Service");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "IsAvailable", "Boolean");
                xamlMember.Getter = get_15_Service_IsAvailable;
                xamlMember.Setter = set_15_Service_IsAvailable;
                break;
            case "BookingSystem.Model.Service.ServiceName":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.Model.Service");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "ServiceName", "String");
                xamlMember.Getter = get_16_Service_ServiceName;
                xamlMember.Setter = set_16_Service_ServiceName;
                break;
            case "BookingSystem.ViewModel.AccommodationVM.ListOfAccommodations":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookingSystem.ViewModel.AccommodationVM");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "ListOfAccommodations", "System.Collections.ObjectModel.ObservableCollection`1<BookingSystem.Model.Accommodation>");
                xamlMember.Getter = get_17_AccommodationVM_ListOfAccommodations;
                xamlMember.Setter = set_17_AccommodationVM_ListOfAccommodations;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_18_Interaction_Behaviors;
                xamlMember.Setter = set_18_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactivity.Trigger.Actions":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_Trigger_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_20_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_21_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_22_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.NavigateToPageAction.TargetPage":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.NavigateToPageAction");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "TargetPage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_NavigateToPageAction_TargetPage;
                xamlMember.Setter = set_23_NavigateToPageAction_TargetPage;
                break;
            case "Microsoft.Xaml.Interactions.Core.NavigateToPageAction.Parameter":
                userType = (global::BookingSystem.BookingSystem_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.NavigateToPageAction");
                xamlMember = new global::BookingSystem.BookingSystem_XamlTypeInfo.XamlMember(this, "Parameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_NavigateToPageAction_Parameter;
                xamlMember.Setter = set_24_NavigateToPageAction_Parameter;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::BookingSystem.BookingSystem_XamlTypeInfo.XamlSystemBaseType
    {
        global::BookingSystem.BookingSystem_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::BookingSystem.BookingSystem_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::BookingSystem.BookingSystem_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::BookingSystem.BookingSystem_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

